name: Process Zip Files

on:
  push:
    branches:
      - main  # Adjust this to the branch you want to trigger the workflow

jobs:
  process:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JQ and Utilities
        run: sudo apt-get install -y jq unzip zip

      - name: Create input-files Directory
        run: mkdir -p input-files

      - name: Move Zip Files to input-files Directory
        run: |
          # List zip files before moving
          echo "Listing zip files in root directory:"
          ls *.zip || echo "No zip files found in root directory."
          
          # Move zip files to the input-files directory
          if ls *.zip 1> /dev/null 2>&1; then
            mv *.zip input-files/
          else
            echo "No zip files found to move."
          fi

      - name: List Files in input-files Directory
        run: |
          echo "Listing files in input-files directory:"
          ls input-files/

      - name: Process Zip Files
        run: |
          #!/bin/bash

          # Function to truncate username and url fields in users_000001.json file
          truncate_fields() {
              local file_path="$1"
              echo "Processing file: $file_path"
              
              # Debug output: print the original JSON
              jq '.' "$file_path"
              
              # Truncate login and url fields
              jq 'map(
                  if .login and (.login | length > 33) then .login = (.login | .[0:32]) else . end |
                  if .url and (.url | length > 33) then .url = (.url | .[0:32]) else . end
              )' "$file_path" > tmp.$$.json && mv tmp.$$.json "$file_path"
              
              echo "Processed file: $file_path"
              
              # Debug output: print the modified JSON
              jq '.' "$file_path"
          }

          # Navigate to the directory with zip files
          cd input-files || { echo "Directory input-files does not exist!"; exit 1; }

          # List zip files in the input-files directory
          echo "Listing zip files in input-files directory:"
          ls *.zip || { echo "No zip files found in input-files directory."; exit 1; }

          # Process each zip file
          for zip_file in *.zip; do
              # Extract the base name of the file (without extension)
              base_name=$(basename "$zip_file" .zip)
              
              # Create a directory with the base name
              mkdir -p "$base_name"
              
              # Unzip the file into the created directory
              unzip "$zip_file" -d "$base_name"
              
              echo "Extracted $zip_file into $base_name/"
              
              # Change to the new directory
              cd "$base_name" || exit
              
              # Check for users_000001.json file and truncate fields if necessary
              if [ -f "users_000001.json" ]; then
                  echo "users_000001.json found, checking for long fields..."
                  truncate_fields "users_000001.json"
              else
                  echo "users_000001.json not found in $base_name/"
              fi
              
              # Go back to the original directory
              cd ..
              
              # Create a zip archive of the directory
              zip -r "${base_name}_processed.zip" "$base_name"
              echo "Created archive: ${base_name}_processed.zip"
              
              # Remove the extracted directory if needed
              rm -rf "$base_name"
          done

      - name: Upload Processed Files
        uses: actions/upload-artifact@v3
        with:
          name: processed-zip-files
          path: input-files/*_processed.zip
