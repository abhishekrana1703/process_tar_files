name: Process Tar Files

on:
  push:
    branches:
      - main  # Adjust this to the branch you want to trigger the workflow

jobs:
  process:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JQ and Utilities
        run: sudo apt-get install -y jq tar gzip

      - name: Create tar-files Directory
        run: mkdir -p tar-files

      - name: Move Tar Files to tar-files Directory
        run: |
          # List tar.gz files before moving
          echo "Listing tar.gz files in root directory:"
          ls *.tar.gz || echo "No tar.gz files found in root directory."
          
          # Move tar.gz files to the tar-files directory if they exist
          if ls *.tar.gz 1> /dev/null 2>&1; then
            mv *.tar.gz tar-files/
          else
            echo "No tar.gz files found to move."
          fi

      - name: List Files in tar-files Directory
        run: |
          echo "Listing files in tar-files directory:"
          ls tar-files/

      - name: Process Tar Files
        run: |
          #!/bin/bash

          # Function to truncate username and url fields in users_000001.json file
          truncate_fields() {
              local file_path="$1"
              echo "Processing file: $file_path"
              
              # Debug output: print the original JSON
              jq '.' "$file_path"
              
              # Truncate login and url fields
              jq 'map(
                  if .login and (.login | length > 33) then .login = (.login | .[0:32]) else . end |
                  if .url and (.url | length > 33) then .url = (.url | .[0:32]) else . end
              )' "$file_path" > tmp.$$.json && mv tmp.$$.json "$file_path"
              
              echo "Processed file: $file_path"
              
              # Debug output: print the modified JSON
              jq '.' "$file_path"
          }

          # Navigate to the directory with tar.gz files
          cd tar-files || { echo "Directory tar-files does not exist!"; exit 1; }

          # List tar.gz files in the tar-files directory
          echo "Listing tar.gz files in tar-files directory:"
          ls *.tar.gz || { echo "No tar.gz files found in tar-files directory."; exit 1; }

          # Process each tar.gz file
          for tar_file in *.tar.gz; do
              # Extract the base name of the file (without extension)
              base_name=$(basename "$tar_file" .tar.gz)
              
              # Create a directory with the base name
              mkdir -p "$base_name"
              
              # Extract the tar.gz file into the created directory
              tar -xzvf "$tar_file" -C "$base_name"
              
              echo "Extracted $tar_file into $base_name/"
              
              # Change to the new directory
              cd "$base_name" || exit
              
              # Check for users_000001.json file and truncate fields if necessary
              if [ -f "users_000001.json" ]; then
                  echo "users_000001.json found, checking for long fields..."
                  truncate_fields "users_000001.json"
              else
                  echo "users_000001.json not found in $base_name/"
              fi
              
              # Go back to the original directory
              cd ..
              
              # Create a tar.gz archive of the directory
              tar -czvf "${base_name}_processed.tar.gz" "$base_name"
              echo "Created archive: ${base_name}_processed.tar.gz"
              
              # Remove the extracted directory if needed
              rm -rf "$base_name"
          done

      - name: Upload Processed Files
        uses: actions/upload-artifact@v3
        with:
          name: processed-tar-files
          path: tar-files/*_processed.tar.gz
