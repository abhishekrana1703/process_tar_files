#!/bin/bash

# Check for any .tar.gz files in the current directory
TAR_FILE=$(find . -maxdepth 1 -name "*.tar.gz" | head -n 1)

# Check if a .tar.gz file was found
if [ -z "$TAR_FILE" ]; then
    echo "No .tar.gz file found in the current directory."
    exit 1
fi

# Extract the filename without extension
FILE_NAME=$(basename "$TAR_FILE" .tar.gz)

# Create a directory with the name of the file (without extension)
mkdir "$FILE_NAME"
if [ $? -ne 0 ]; then
    echo "Failed to create directory $FILE_NAME."
    exit 1
fi

# Extract the .tar.gz file into the new directory
tar -xzvf "$TAR_FILE" -C "$FILE_NAME"
if [ $? -ne 0 ]; then
    echo "Failed to extract $TAR_FILE into $FILE_NAME."
    exit 1
fi

# Go inside the directory
cd "$FILE_NAME" || { echo "Failed to enter directory $FILE_NAME."; exit 1; }

# Check if the users_000001.json file exists
if [ -f "users_000001.json" ]; then
    echo "JSON file 'users_000001.json' exists."

    # Remove the original JSON file
    rm "users_000001.json"
    if [ $? -ne 0 ]; then
        echo "Failed to remove users_000001.json."
        exit 1
    fi
    echo "Original JSON file has been removed."

    # Copy the new JSON file from the specified location
    cp /home/ec2-user/json-file/users_000001.json "users_000001.json"
    if [ $? -ne 0 ]; then
        echo "Failed to copy new JSON file."
        exit 1
    fi
    echo "New JSON file has been copied from '/home/ec2-user/json-file/users_000001.json' to '$FILE_NAME/'."

else
    echo "JSON file 'users_000001.json' not found in the directory $FILE_NAME."
    exit 1
fi

# Return to the original directory
cd ..
if [ $? -ne 0 ]; then
    echo "Failed to return to the original directory."
    exit 1
fi

# Create a new .tar.gz file with the folder name and timestamp
TIMESTAMP=$(date +"%Y%m%d%H%M%S")
NEW_TAR_FILE="${FILE_NAME}_${TIMESTAMP}.tar.gz"
tar -czvf "$NEW_TAR_FILE" "$FILE_NAME"
if [ $? -ne 0 ]; then
    echo "Failed to create new tar file $NEW_TAR_FILE."
    exit 1
fi
echo "New tar file $NEW_TAR_FILE created."

# Delete the folder
rm -rf "$FILE_NAME"
if [ $? -ne 0 ]; then
    echo "Failed to remove the directory $FILE_NAME."
    exit 1
fi
echo "Directory $FILE_NAME removed."

# Check permissions (Optional: Adjust as needed)
chown ec2-user:ec2-user "$NEW_TAR_FILE"
if [ $? -ne 0 ]; then
    echo "Failed to change ownership of $NEW_TAR_FILE."
    exit 1
fi
echo "Ownership of $NEW_TAR_FILE changed to ec2-user."

chmod 644 "$NEW_TAR_FILE"
if [ $? -ne 0 ]; then
    echo "Failed to set permissions on $NEW_TAR_FILE."
    exit 1
fi
echo "Permissions for $NEW_TAR_FILE set to 644."

